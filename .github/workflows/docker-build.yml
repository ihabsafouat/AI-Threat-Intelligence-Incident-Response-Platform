name: Docker Build and Push

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to build (api, ingestion, worker, dashboard-dev, dashboard-prod, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - api
          - ingestion
          - worker
          - dashboard-dev
          - dashboard-prod

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api
            dockerfile: backend/Dockerfile.api
            context: ./backend
            port: 8000
            description: "API Service"
          - service: ingestion
            dockerfile: backend/Dockerfile.ingestion
            context: ./backend
            port: 8001
            description: "Data Ingestion Service"
          - service: worker
            dockerfile: backend/Dockerfile.worker
            context: ./backend
            port: null
            description: "Celery Worker Service"
          - service: dashboard-dev
            dockerfile: frontend/Dockerfile.development
            context: ./frontend
            port: 3000
            description: "Development Dashboard"
          - service: dashboard-prod
            dockerfile: frontend/Dockerfile.production
            context: ./frontend
            port: 3000
            description: "Production Dashboard"
        # Only build specified service if workflow_dispatch is used
        exclude:
          - service: api
            when: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.service != 'api' && github.event.inputs.service != 'all' }}
          - service: ingestion
            when: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.service != 'ingestion' && github.event.inputs.service != 'all' }}
          - service: worker
            when: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.service != 'worker' && github.event.inputs.service != 'all' }}
          - service: dashboard-dev
            when: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.service != 'dashboard-dev' && github.event.inputs.service != 'all' }}
          - service: dashboard-prod
            when: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.service != 'dashboard-prod' && github.event.inputs.service != 'all' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=${{ matrix.description }}
          org.opencontainers.image.description=${{ matrix.description }}
          org.opencontainers.image.vendor=Threat Intelligence Platform
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Generate SBOM
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: anchore/sbom-action@v0
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}:${{ github.sha }}
        format: spdx-json
        output-file: sbom-${{ matrix.service }}.json

    - name: Upload SBOM
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ matrix.service }}
        path: sbom-${{ matrix.service }}.json
        retention-days: 30

  # Security scanning for built images
  security-scan:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        service: [api, ingestion, worker, dashboard-dev, dashboard-prod]

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results-${{ matrix.service }}.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results-${{ matrix.service }}.sarif'

  # Notify on completion
  notify:
    needs: [build, security-scan]
    runs-on: ubuntu-latest
    if: always() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    
    steps:
    - name: Notify on success
      if: success()
      run: |
        echo "✅ Docker images built and pushed successfully!"
        echo "Images:"
        echo "- ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api:${{ github.sha }}"
        echo "- ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ingestion:${{ github.sha }}"
        echo "- ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-worker:${{ github.sha }}"
        echo "- ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-dashboard-dev:${{ github.sha }}"
        echo "- ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-dashboard-prod:${{ github.sha }}"

    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Docker build failed!"
        exit 1 